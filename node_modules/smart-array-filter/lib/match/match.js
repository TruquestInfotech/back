"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const recursiveMatch_1 = __importDefault(require("./recursiveMatch"));
/**
 * Match.
 *
 * @param element - String | number | Record<string, string>.
 * @param criteria - Criterion[].
 * @param predicate - String.
 * @param options - Object.
 * @param options.ignorePaths - RegExp[].
 * @param options.pathAlias - Record<string, string|RegExp>s.
 * @returns Boolean.
 */
function match(element, criteria, predicate, options) {
    if (criteria.length) {
        let found = false;
        for (const criterion of criteria) {
            // match XOR negate
            if ((0, recursiveMatch_1.default)(element, criterion, [], options)
                ? !criterion.negate
                : criterion.negate) {
                if (predicate === 'OR') {
                    return true;
                }
                found = true;
            }
            else if (predicate === 'AND') {
                return false;
            }
        }
        return found;
    }
    return true;
}
exports.default = match;
//# sourceMappingURL=match.js.map